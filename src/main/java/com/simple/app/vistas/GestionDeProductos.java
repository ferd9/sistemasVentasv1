/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.simple.app.vistas;

import com.simple.app.dao.CategoriaJpaController;
import com.simple.app.dao.ProductoJpaController;
import com.simple.app.dao.exceptions.NonexistentEntityException;
import com.simple.app.modelo.Categoria;
import com.simple.app.modelo.Producto;
import com.simple.app.vistas.custom.DeleteCellEditor;
import com.simple.app.vistas.custom.TableDeleteActionCellRender;
import com.simple.app.vistas.interfaces.TableActionEvent;
import com.simple.app.vistas.models.CategoriaComboModel;
import com.simple.app.vistas.models.ProductoTableModel;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/**
 *
 * @author Lynkos
 */
public class GestionDeProductos extends javax.swing.JInternalFrame  {

    /**
     * Creates new form GestionDeProductos
     */
    public GestionDeProductos() {
        initComponents();
        this.setClosable(true);  
        this.setSize(800, 600);
        initDefaultValues();
        cargarTablaProductos();
        eventoSeleccionarTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        spCantidad = new javax.swing.JSpinner();
        ftxtPrecio = new javax.swing.JFormattedTextField();
        ftxtImpuestos = new javax.swing.JFormattedTextField();
        cbCategorias = new javax.swing.JComboBox<Categoria>();
        jScrollPane1 = new javax.swing.JScrollPane();
        taDescripcion = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        btnGuardar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblProductos = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Crear Producto", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(0, 0, 0))); // NOI18N
        jPanel2.setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("Nombre:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 5);
        jPanel2.add(jLabel1, gridBagConstraints);

        jLabel2.setText("Cantidad:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 5);
        jPanel2.add(jLabel2, gridBagConstraints);

        jLabel3.setText("Precio:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 5);
        jPanel2.add(jLabel3, gridBagConstraints);

        jLabel5.setText("Impuestos:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 5);
        jPanel2.add(jLabel5, gridBagConstraints);

        jLabel6.setText("Categorias:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 5);
        jPanel2.add(jLabel6, gridBagConstraints);

        txtNombre.setMinimumSize(new java.awt.Dimension(120, 22));
        txtNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 12;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 5);
        jPanel2.add(txtNombre, gridBagConstraints);

        spCantidad.setModel(new javax.swing.SpinnerNumberModel(1, null, null, 1));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 10;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 6, 5);
        jPanel2.add(spCantidad, gridBagConstraints);

        ftxtPrecio.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 5);
        jPanel2.add(ftxtPrecio, gridBagConstraints);

        ftxtImpuestos.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 5);
        jPanel2.add(ftxtImpuestos, gridBagConstraints);

        cbCategorias.setModel(new CategoriaComboModel());
        cbCategorias.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 10;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 5);
        jPanel2.add(cbCategorias, gridBagConstraints);

        taDescripcion.setColumns(20);
        taDescripcion.setRows(5);
        jScrollPane1.setViewportView(taDescripcion);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 10;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
        jPanel2.add(jScrollPane1, gridBagConstraints);

        jLabel4.setText("Descripci√≥n:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jPanel2.add(jLabel4, gridBagConstraints);

        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        jPanel2.add(btnGuardar, gridBagConstraints);

        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 5;
        jPanel2.add(btnActualizar, gridBagConstraints);

        jPanel1.add(jPanel2, java.awt.BorderLayout.PAGE_START);

        jPanel4.setLayout(new java.awt.BorderLayout());

        tblProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "id", "Nombre", "Precio", "Impuestos", "Cantidad", "Categoria", "Descripci√≥n"
            }
        ));
        jScrollPane2.setViewportView(tblProductos);

        jPanel4.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel4, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        String nombre = this.txtNombre.getText().trim();

        // Validar que el JTextField no est√© vac√≠o
        if (nombre.isBlank()) {            
            JOptionPane.showMessageDialog(null, "Nombre inv√°lido. Debe contener solo letras, n√∫meros, guion y subguion.");
            return;
        }
        ProductoJpaController productoJpaController = new ProductoJpaController();
        if(productoJpaController.findProductoByName(nombre) != null){
            
            String[] options = {"Continuar", "Cancelar"};
            int response = JOptionPane.showOptionDialog(null, "Ya existe un producto con el nombre: "+nombre, null,
                        JOptionPane.DEFAULT_OPTION,
                        JOptionPane.WARNING_MESSAGE,
                        null, options, null);
                if (response != 0){
                    return;
                }
            
        }
        
        if(this.cbCategorias.getSelectedItem() == null){
            JOptionPane.showMessageDialog(null, "Categoria no valida.");
            return;
        }
        
         // Obtener el valor del primer JFormattedTextField (Precio)
        Double precio = Double.parseDouble(String.valueOf(this.ftxtPrecio.getValue()));
        Integer impuesto = Integer.parseInt(String.valueOf((this.ftxtImpuestos.getValue())));

        // Obtener el valor del segundo JFormattedTextField (Cantidad)
        int cantidad = (int) this.spCantidad.getValue();

        // Obtener el valor seleccionado en el 
        Categoria categoriaSelecionada = (Categoria)this.cbCategorias.getSelectedItem();
        

        // Obtener el valor del JTextArea
        String descripcion = this.taDescripcion.getText();
        
        
        Producto producto = new Producto();
        
        producto.setNombre(nombre);
        producto.setCantidad(cantidad);
        producto.setPrecio(precio);
        producto.setPorcentajeIva(impuesto);
        producto.setIdCategoria(categoriaSelecionada.getIdCategoria());
        producto.setDescripcion(descripcion);
        producto.setEstado(1);
        
        System.out.println(producto);
        productoJpaController = new ProductoJpaController();
        productoJpaController.create(producto);
        cargarTablaProductos();
        initDefaultValues();
        
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void cargarTablaProductos(){
        
        ProductoJpaController productoJpaController = new ProductoJpaController();
        List<Producto> listaProductos = productoJpaController.findProductoEntities(); 
        productoJpaController.close();
        ProductoTableModel model = new ProductoTableModel(listaProductos);
        this.tblProductos.setModel(model);
        
        TableActionEvent tableActionEvent = new TableActionEvent() {
            @Override
            public void onEdit(int row) {
                //sin inplementacion               
            }

            @Override
            public void onDelete(int row) {
                System.out.println(row);

                String[] options = {"Eliminar", "Cancelar"};
                int response = JOptionPane.showOptionDialog(null, "¬øEsta seguro de eliminar la categoria seleccionada?", null,
                        JOptionPane.DEFAULT_OPTION,
                        JOptionPane.WARNING_MESSAGE,
                        null, options, null);
                if (response == 0) {
                    //int idCategoria = (int) tblCategorias.getModel().getValueAt(row, 0);
                    Producto productoSelecionado = ((ProductoTableModel)tblProductos.getModel()).getProductoAt(row);                   
                    deleteProducto(productoSelecionado.getIdProducto());
                    cargarTablaProductos();
                }

            }

            @Override
            public void onView(int row) {
                System.out.println(row);
            }
        };
        
        tblProductos.setRowHeight(35);
        tblProductos.getColumnModel().getColumn(8).setCellRenderer(new TableDeleteActionCellRender());
        tblProductos.getColumnModel().getColumn(8).setCellEditor(new DeleteCellEditor(tableActionEvent));
        
    }
    
    private void cargarCategorias(){
        
       CategoriaJpaController categoriaJpaController = new CategoriaJpaController();
       List<Categoria> categorias = categoriaJpaController.findCategoriaEntities();  
       CategoriaComboModel categoriaComboModel = new CategoriaComboModel();
       categoriaComboModel.addCategorias(categorias);
       this.cbCategorias.setModel(categoriaComboModel);
       categoriaJpaController.close();
    }
    
    
    private void initDefaultValues(){
        this.ftxtImpuestos.setValue(0);
        this.ftxtPrecio.setValue(0);
        this.taDescripcion.setText("");
        this.txtNombre.setText("");
        this.cargarCategorias();
        this.spCantidad.setValue(1);
    }
    
    private void deleteProducto(int idProducto){
        ProductoJpaController productoJpaController = new ProductoJpaController();
        try {
            productoJpaController.destroy(idProducto);            
        } catch (NonexistentEntityException ex) {
            Logger.getLogger(GestionDeProductos.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Error: no se puedo eliminar.");
        }finally{
            productoJpaController.close();
        }
    }
    
    
    private void filaDeTablaSeleccionada(){
        int filaSeleccionada = this.tblProductos.getSelectedRow();
        if(filaSeleccionada < 0)
        {
            return;
        }
        Producto producto = ((ProductoTableModel)this.tblProductos.getModel()).getProductoAt(filaSeleccionada);
        this.txtNombre.setText(producto.getNombre());
        this.ftxtPrecio.setValue(producto.getPrecio());
        this.ftxtImpuestos.setValue(producto.getPorcentajeIva());
        this.spCantidad.setValue(producto.getCantidad());
        this.taDescripcion.setText(producto.getDescripcion());
        
        
        for(int i = 0; i < this.cbCategorias.getItemCount(); i++){
            Categoria categoria = this.cbCategorias.getItemAt(i);
            if(categoria.getIdCategoria() == producto.getIdCategoria()){
                this.cbCategorias.setSelectedIndex(i);
                System.out.println("ID categoria: "+categoria.getIdCategoria());
                break;
            }            
        }       
        
    }
    
    private void eventoSeleccionarTabla(){
        this.tblProductos.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if(!e.getValueIsAdjusting()){
                    filaDeTablaSeleccionada();
                }
            }
        
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JComboBox<Categoria> cbCategorias;
    private javax.swing.JFormattedTextField ftxtImpuestos;
    private javax.swing.JFormattedTextField ftxtPrecio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSpinner spCantidad;
    private javax.swing.JTextArea taDescripcion;
    private javax.swing.JTable tblProductos;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables
}
