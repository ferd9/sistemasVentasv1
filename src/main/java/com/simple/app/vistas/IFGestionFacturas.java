/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package com.simple.app.vistas;

import com.simple.app.dao.CabeceraVentaJpaController;
import com.simple.app.dao.ClienteJpaController;
import com.simple.app.dao.DetalleVentaJpaController;
import com.simple.app.dao.ProductoJpaController;
import com.simple.app.modelo.CabeceraVenta;
import com.simple.app.modelo.Cliente;
import com.simple.app.modelo.DetalleVenta;
import com.simple.app.modelo.Producto;
import com.simple.app.vistas.dialogs.BuscarClienteDialog;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Lynkos
 */
public class IFGestionFacturas extends javax.swing.JInternalFrame {

    /**
     * Creates new form IFGestionFacturas
     */
    
    private final String[] nameColumnsCabecera = new String[]{
    "Nro","Cliente", "Valor Total", "Fecha", "Estado"
    };
    
    private final String[] nameColumnsDetalleVenta = new String[]{
    "Nro","Cabecera", "Producto", "Cantidad", "Precio U.", "Subtotal", "Desc.", "Iva", "Pago Total", "Estado"
    };
    
    private Cliente clienteSeleccionado;
    
    public IFGestionFacturas() {
        initComponents();
        cargarTablaCabecera();
        clienteSeleccionado = new Cliente();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCabeceraVenta = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtCliente = new javax.swing.JTextField();
        btnBuscarCliente = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txtCedula = new javax.swing.JTextField();
        jftPagoTotal = new javax.swing.JFormattedTextField();
        txtEstado = new javax.swing.JTextField();
        btnActualizar = new javax.swing.JButton();
        btnCerrar = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblDetallesVenta = new javax.swing.JTable();

        setClosable(true);
        setResizable(true);

        jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, javax.swing.BoxLayout.PAGE_AXIS));

        jPanel2.setPreferredSize(new java.awt.Dimension(796, 200));
        jPanel2.setLayout(new java.awt.BorderLayout());

        tblCabeceraVenta.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblCabeceraVenta.setPreferredSize(new java.awt.Dimension(300, 100));
        jScrollPane1.setViewportView(tblCabeceraVenta);

        jPanel2.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel2);

        jLabel1.setText("Cliente:");

        jLabel2.setText("Pago Total:");

        jLabel4.setText("Estado:");

        btnBuscarCliente.setText("Buscar Cliente");
        btnBuscarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarClienteActionPerformed(evt);
            }
        });

        jLabel3.setText("DNI/CEDULA:");

        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        btnCerrar.setText("Cerrar");
        btnCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jftPagoTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel4))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 427, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 70, Short.MAX_VALUE)
                                .addComponent(jLabel3)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCedula, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(btnBuscarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnCerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(14, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(txtCedula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addComponent(jftPagoTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBuscarCliente)
                    .addComponent(btnActualizar)
                    .addComponent(btnCerrar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel3);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("GESTION VENTAS");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(168, 168, 168)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 466, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(189, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
        );

        getContentPane().add(jPanel4, java.awt.BorderLayout.PAGE_START);

        jPanel5.setLayout(new java.awt.BorderLayout());

        jScrollPane2.setPreferredSize(new java.awt.Dimension(452, 200));

        tblDetallesVenta.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tblDetallesVenta);

        jPanel5.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel5, java.awt.BorderLayout.PAGE_END);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnCerrarActionPerformed

    private void btnBuscarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarClienteActionPerformed
        BuscarClienteDialog buscarClienteDialog = new BuscarClienteDialog((JFrame)null,true);
        buscarClienteDialog.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosed(WindowEvent e) {
                System.out.println("Cerradoooo.... "+buscarClienteDialog.getClienteSeleccionado().getNombre());
                if(buscarClienteDialog.getClienteSeleccionado().getIdCliente() != null ){
                    clienteSeleccionado = buscarClienteDialog.getClienteSeleccionado();
                    handlerSeleccionarCliente(clienteSeleccionado);
                }
            }
        });
        buscarClienteDialog.pack();
        buscarClienteDialog.setLocationRelativeTo(this);
        buscarClienteDialog.setVisible(true);
        
    }//GEN-LAST:event_btnBuscarClienteActionPerformed

    private void cargarTablaCabecera(){        
        
        List<CabeceraVenta>  listaCaberaVentas = obtenerCabeceraVenta();
        
        Object datosParaTabla[][] = new Object[listaCaberaVentas.size()][this.nameColumnsCabecera.length];
        for(int i=0;i<listaCaberaVentas.size();i++){
            Cliente cliente = this.getCliente(listaCaberaVentas.get(i).getIdCliente());
            datosParaTabla[i][0] = listaCaberaVentas.get(i).getIdCabeceraventa();
            datosParaTabla[i][1] = cliente.getNombre();
            datosParaTabla[i][2] = listaCaberaVentas.get(i).getValorPagar();
            datosParaTabla[i][3] = listaCaberaVentas.get(i).getFechaVenta();
            datosParaTabla[i][4] = formatMensajeEstado(listaCaberaVentas.get(i).getEstado());                      
        }
        
        DefaultTableModel modeloTabla = new DefaultTableModel(datosParaTabla, nameColumnsCabecera);
        this.tblCabeceraVenta.setModel(modeloTabla);
        this.tblCabeceraVenta.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
            @Override
            public void valueChanged(ListSelectionEvent e) {
                handlerLlenarTablaDetalleVentas();
                int idCabecera = (Integer) tblCabeceraVenta.getValueAt(tblCabeceraVenta.getSelectedRow(), 0);               
                CabeceraVenta cabeceraVenta = getCabeceraVenta(idCabecera);
                Cliente cliente = getCliente(cabeceraVenta.getIdCliente());
                handlerSeleccionarCliente(cliente);
                jftPagoTotal.setValue(cabeceraVenta.getValorPagar());
            }
        
        });
    }    
   
    private void handlerSeleccionarCliente(Cliente cliente){
        
        this.txtCliente.setText(cliente.getNombre());
        this.txtCedula.setText(cliente.getCedula());
        this.txtEstado.setText(this.formatMensajeEstado(cliente.getEstado()));
    }
    
    private void handlerLlenarTablaDetalleVentas(){
        
        int idCabecera = (Integer) tblCabeceraVenta.getValueAt(tblCabeceraVenta.getSelectedRow(), 0);
        List<DetalleVenta> listaDetallesVentas = obtenerDetallesVentasPorCabecera(idCabecera);
        if (listaDetallesVentas == null) {
            return;
        }

        if (listaDetallesVentas.isEmpty()) {
            return;
        }
        cargarTablaDetallesVenta(listaDetallesVentas);        
        
    }
    
    private List<CabeceraVenta> obtenerCabeceraVenta(){
        CabeceraVentaJpaController cabeceraVentaJpaController = new CabeceraVentaJpaController();
        List<CabeceraVenta> listaCabeceraVenta = cabeceraVentaJpaController.findCabeceraVentaEntities();
        cabeceraVentaJpaController.close();
        return listaCabeceraVenta;       
    }
    
    private List<DetalleVenta> obtenerDetallesVentasPorCabecera(Integer IdCabecera){
        DetalleVentaJpaController detalleVentaJpaController = new DetalleVentaJpaController();
        List<DetalleVenta> listaDetallesVentas = detalleVentaJpaController.findDetalleVentaByCabecera(IdCabecera);
        detalleVentaJpaController.close();
        return listaDetallesVentas;
    }
    
    private void cargarTablaDetallesVenta(List<DetalleVenta> lstDetalleVentas){
        
        Object datosParaTabla[][] = new Object[lstDetalleVentas.size()][this.nameColumnsDetalleVenta.length];
        for(int i=0;i<lstDetalleVentas.size();i++){
            Producto producto = getProducto(lstDetalleVentas.get(i).getIdProducto());
            datosParaTabla[i][0] = lstDetalleVentas.get(i).getIdDetalleVenta();
            datosParaTabla[i][1] = lstDetalleVentas.get(i).getIdCabeceraVenta();
            datosParaTabla[i][2] = producto.getNombre();
            datosParaTabla[i][3] = lstDetalleVentas.get(i).getCantidad();
            datosParaTabla[i][4] = lstDetalleVentas.get(i).getPrecioUnitario();
            datosParaTabla[i][5] = lstDetalleVentas.get(i).getSubTotal();
            datosParaTabla[i][6] = lstDetalleVentas.get(i).getDescuento();
            datosParaTabla[i][7] = lstDetalleVentas.get(i).getIva();
            datosParaTabla[i][8] = lstDetalleVentas.get(i).getTotalPagar();
            datosParaTabla[i][9] = formatMensajeEstado(lstDetalleVentas.get(i).getEstado());
                                 
        }
        
        DefaultTableModel modeloTabla = new DefaultTableModel(datosParaTabla, nameColumnsDetalleVenta);
        this.tblDetallesVenta.setModel(modeloTabla);
        
    }
    
    private CabeceraVenta getCabeceraVenta(Integer idCabeceraVenta){
        CabeceraVentaJpaController cabeceraVentaJpaController = new CabeceraVentaJpaController();
        CabeceraVenta cabeceraVenta = cabeceraVentaJpaController.findCabeceraVenta(idCabeceraVenta);
        cabeceraVentaJpaController.close();
        return cabeceraVenta;
    }
    
    private Cliente getCliente(Integer idCliente){
        ClienteJpaController clienteJpaController = new ClienteJpaController();
        Cliente cliente = clienteJpaController.findCliente(idCliente);
        clienteJpaController.close();
        return cliente;
    }
    
    private Producto getProducto(Integer idProducto){
        ProductoJpaController productoJpaController = new ProductoJpaController();
        Producto producto = productoJpaController.findProducto(idProducto);
        productoJpaController.close();
        return producto;
    }
    
    private String formatMensajeEstado(Integer estado){
        
        String strEstado = "Activo";
        if(estado == 0)
        {
            strEstado = "Inactivo";
        }
        
        return strEstado;
    }
    
    
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnBuscarCliente;
    private javax.swing.JButton btnCerrar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JFormattedTextField jftPagoTotal;
    private javax.swing.JTable tblCabeceraVenta;
    private javax.swing.JTable tblDetallesVenta;
    private javax.swing.JTextField txtCedula;
    private javax.swing.JTextField txtCliente;
    private javax.swing.JTextField txtEstado;
    // End of variables declaration//GEN-END:variables
}
